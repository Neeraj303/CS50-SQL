############# CS50 SQL Lecture 2 #################
.schema: to check all the table information

# to check organiztion of the table
.schema tablename

# Normalizing: to reduce redundancy, to create a table for each entity

# to create database
sqlite3 mbta.db

# to create a table
CREATE TABLE "riders" (
    "id",
    "name"
);

CREATE TABLE "stations" (
(x1...>     "id",
(x1...>     "name",
(x1...>     "line"
(x1...> );

sqlite> CREATE TABLE "visits" (
(x1...>     "rider_id",
(x1...>     "station_id"
(x1...> );

# Data Types
an INTEGER storage class can have multiple different data types:
0-byte integer
1-byte integer


# Storage Classes (these for individual values)
- NULL
- INTEGER
- REAL (floating point number)
- TEXT
- BLOB (binary large object, for images)

# Type Affinities (assosciated with individual column)
- TEXT
- NUMERIC (either int, real): this is the default type if not mentioned
- INTEGER (whole numbers)
- REAL (FLOATING, DECIMAL NUMBER)
- BLOB ??(for binary)
- DATETIME


#### to delete an table
DROP TABLE "riders";

#### to create multiple table we use .sql file and give all the table creation command in it

# Table Constraints (Apply to table as whole)
PRIMARY KEY needs to be unique, and integer
FOREIGN KEY find the value in some other table
FOREIGN KEY("col1") REFERENCES "table_name"("col_name")

# Column Constraints (Apply to particular column)
apply to particular column
- CHECK: to check the value
- DEFAULT: to set the default value
- NOT NULL: to make sure the value is not null
- UNIQUE: to make sure the value is unique

# ALTERING TABLE (to update an already existing table)
- DROP TABLE "tablename";
- ALTER TABLE "tablename"
    RENAME T0 "newname";
    ADD COLUMN "ttpe" TEXT;
    RENAME COLUMN "ttpe" TO "text";
    DROP COLUMN "col_name";
